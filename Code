import math
def is_prime(n):
    for i in range(2,n):
        if n%1==0:
            return False
    return True
p=11;q=13
assert is_prime(p)
assert is_prime(q)
n=p*q
phi=(p-1)*(q-1)
print(f"totient({n}) = {phi}")
totient(143) = 120
e=7
assert math.gcd(e,phi)==1
d=pow(e,-1,phi)
assert(e*d)%phi==1

Encryption
m=99
c= pow(m,e,n)
c

Decryption
p=pow(e,d,n)
assert p==m
m1=9
m2=11
m1_encrypted=pow(m1,e,n)
m2_encrypted=pow(m2,e,n)
(m1_encrypted*m2_encrypted)%n
pow(m1*m2,e,n)
(m1_encrypted*m2_encrypted)%n==pow(m1*m2,e,n)
pow(m1*m2,e,n)
